spring:
  application:
    name: financial-helper
  #todo вынести все чувствительные данные в .env
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE:5439}/${DATABASE_NAME:finance-helper}
    user: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:0322}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${AUTH_PROVIDER_HOST:localhost}:${AUTH_PROVIDER_PORT:8910}/realms/finance
          jwk-set-uri: http://${AUTH_PROVIDER_HOST:localhost}:${AUTH_PROVIDER_PORT:8910}/realms/finance/protocol/openid-connect/certs

  r2dbc:
    url: r2dbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE:5439}/${DATABASE_NAME:finance-helper}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:0322}
    pool:
      enabled: true

  data:
    r2dbc:
      repositories:
        enabled: true

    redis:
      database: 0
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:pass}
      connect-timeout: 60000

    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:financial-helper}
      username: ${MONGODB_USERNAME:root}
      password: ${MONGODB_PASSWORD:0322}
      authentication-database: ${MONGODB_AUTH_DATABASE:admin}

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin}

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

info:
  app:
    name: ${spring.application.name}
    version: 0.0.1

app:
  qr-receipt:
    reading-api-url: ${QR_CODE_READING_RECEIPT_API}
    reading-api-token: ${QR_CODE_READING_RECEIPT_API_TOKEN}
  rabbitmq:
    queue: fm-common
    exchange: fm-exchange
  dev-profile: ${IS_DEV_PROFILE:false}
  gigachat:
    generation-model: ${GIGACHAT_GENERATION_MODEL}
    generation-api-url: ${GIGACHAT_GENERATION_API_URL}
    auth-url: ${GIGACHAT_AUTH_URL}
    auth-token: ${GIGACHAT_AUTH_TOKEN}
    generation-categories-prompt: ${GIGACHAT_GENERATION_PROMPT}
    api-scope: GIGACHAT_API_PERS
  default-category: ${DEFAULT_CATEGORY:Other}