volumes:
  postgres-data:
  rabbitmq_data:
  keycloak_data:
  mongodb_data:

networks:
  mongo-network:


services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: "finance-helper"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "0322"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    restart: always
    ports:
      - "5439:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongodb:
    image: mongo:8.0.0
    container_name: mongodb
    hostname: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "0322"
    command: mongod --replSet rs0 --keyFile /etc/mongo-keyfile/mongo-keyfile
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile/mongo-keyfile:ro
    networks:
      - mongo-network

  mongo-init:
    image: mongo:8.0.0
    restart: no
    depends_on:
      - mongodb
    command: >
      mongosh --host -u root -p 0322 mongo:27017 --eval 
      '
      config = {
      "_id" : "rs0",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo:27017"
        }
      ]
      };
      rs.initiate(config);
      '
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "0322"
    networks:
      - mongo-network
  #todo вынести все чувствительные данные в .env

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  keycloak_db:
    image: postgres:16-alpine
    container_name: keycloak_db
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: "keycloak_postgres"
      POSTGRES_DB: "keycloak"
    ports:
      - "5434:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data

  keycloak:
    image: bitnami/keycloak:25
    container_name: keycloak
    depends_on:
      - keycloak_db
    environment:
      KEYCLOAK_DATABASE_HOST: "keycloak_db"
      KEYCLOAK_DATABASE_PORT: "5432"
      KEYCLOAK_DATABASE_NAME: "keycloak"
      KEYCLOAK_DATABASE_USER: "keycloak_postgres"
      KEYCLOAK_DATABASE_PASSWORD:
      KEYCLOAK_DATABASE_SCHEMA: "public"
      KEYCLOAK_ADMIN_USER: "aboldyrev"
      KEYCLOAK_ADMIN_PASSWORD: "changeme"
    ports:
      - "8910:8080"

  redis:
    image: redis:7.4.1
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=pass
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    restart: always