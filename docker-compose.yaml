volumes:
  postgres-data:
  rabbitmq_data:
  keycloak_data:
  mongodb_data:

networks:
  mongo-network:

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    restart: always
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INTERNAL_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongodb:
    image: mongo:8.0.0
    container_name: mongodb
    hostname: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    command: mongod --replSet rs0 --keyFile /etc/mongo-keyfile/mongo-keyfile
    ports:
      - "${MONGODB_EXTERNAL_PORT}:${MONGODB_INTERNAL_PORT}"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile/mongo-keyfile:ro
    networks:
      - mongo-network

  mongo-init:
    image: mongo:8.0.0
    restart: no
    depends_on:
      - mongodb
    command: >
      mongosh --host -u $MONGODB_USER -p $MONGODB_PASSWORD mongo:$MONGODB_EXTERNAL_PORT --eval 
      '
      config = {
      "_id" : "rs0",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo:$MONGODB_EXTERNAL_PORT"
        }
      ]
      };
      rs.initiate(config);
      '
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "${MONGO_EXPRESS_EXTERNAL_PORT}:${MONGO_EXPRESS_INTERNAL_PORT}"
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: ${MONGODB_EXTERNAL_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
    networks:
      - mongo-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "${RABBIT_MQ_EXTERNAL_PORT}:${RABBIT_MQ_INTERNAL_PORT}"
      - "${RABBIT_MQ_EXTERNAL_MANAGEMENT_PORT}:${RABBIT_MQ_INTERNAL_MANAGEMENT_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_MQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_MQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  keycloak_db:
    image: postgres:16-alpine
    container_name: keycloak_db
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_DB: ${KEYCLOAK_DB}
    ports:
      - "${KEYCLOAK_DB_EXTERNAL_PORT}:${KEYCLOAK_DB_INTERNAL_PORT}"
    volumes:
      - keycloak_data:/var/lib/postgresql/data

  keycloak:
    image: bitnami/keycloak:25
    container_name: keycloak
    depends_on:
      - keycloak_db
    environment:
      KEYCLOAK_DATABASE_HOST: "keycloak_db"
      KEYCLOAK_DATABASE_PORT: ${KEYCLOAK_DB_EXTERNAL_PORT}
      KEYCLOAK_DATABASE_NAME: ${KEYCLOAK_DB}
      KEYCLOAK_DATABASE_USER: ${KEYCLOAK_DB_USER}
      KEYCLOAK_DATABASE_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_DATABASE_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "${KEYCLOAK_EXTERNAL_PORT}:${KEYCLOAK_INTERNAL_PORT}"

  redis:
    image: redis:7.4.1
    container_name: redis
    ports:
      - "${REDIS_EXTERNAL_PORT}:${REDIS_INTERNAL_PORT}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    restart: always