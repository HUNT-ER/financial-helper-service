plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.openapi.generator' version '7.8.0'
}

group = 'com.boldyrev'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    //implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.projectlombok:lombok'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.23'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.postgresql:r2dbc-postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"  // Генератор для Spring
    inputSpec = "$rootDir/src/main/resources/openapi/openapi.yaml"  // Путь к спецификации OpenAPI
    outputDir =  "$projectDir/build/generated"  // Папка для сгенерированного кода
    apiPackage = "com.boldyrev.controller"  // Пакет для контроллеров (API)
    modelPackage = "com.boldyrev.dto"  // Пакет для моделей
    library = "spring-boot"  // Указываем использовать Spring Boot
    configOptions = [
            reactive: "true",
            additionalModelTypeAnnotations: "@lombok.experimental.SuperBuilder;@lombok.NoArgsConstructor;@lombok.AllArgsConstructor",
            interfaceOnly: "true",
            useTags: "true",
            dateLibrary: "java8",
            useSpringBoot3: "true",
            openApiNullable: "false"
    ]
}

sourceSets {
    main {
        java {
            srcDirs += "$projectDir/build/generated/src/main/java"
        }
    }
}

compileJava.dependsOn tasks.openApiGenerate
compileTestJava.dependsOn tasks.openApiGenerate